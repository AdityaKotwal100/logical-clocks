syntax = "proto3";

package example;


service Branch {
  rpc Query (QueryRequest) returns (QueryResponse);
  rpc Withdraw (WithdrawRequest) returns (Response);
  rpc Deposit (DepositRequest) returns (Response);
  rpc MsgDelivery (MsgDeliveryRequest) returns (MsgDeliveryResponse);
  rpc Propagate_Withdraw (PropagateWithdrawRequest) returns (Response);
  rpc Propagate_Deposit (PropagateDepositRequest) returns (Response);
  rpc Task2Output (Request) returns (BranchResp);
}


message MsgDeliveryResponse {
  int32 id = 1;
  int32 logical_clock = 4;
  

  message OperationResult {
    string interface = 1;
    string result = 2;
    double balance = 3;
  }

  repeated OperationResult recv = 2;
}
message MsgDeliveryRequest {
  int32 id = 1;
  string interface = 2;
  int32 money = 3;
  int32 logical_clock = 4;
  int32 customer_request_id = 5;
  
}

message QueryRequest {
  int32 customer_id = 1;
  int32 logical_clock = 4;
  int32 customer_request_id = 5;
  string interface = 6;
  string caller = 7;
  int32 id = 8;
}

message QueryResponse {
  int32 balance = 1;
  string message = 2;
  int32 logical_clock = 4;
  int32 customer_request_id = 5;


}

message WithdrawRequest {
  int32 customer_id = 1;
  int32 amount = 2;
  int32 logical_clock = 4;
  int32 customer_request_id = 5;
  string interface = 6;
  string caller = 7;
  int32 id = 8;
  int32 branch_id = 9;

}

message DepositRequest {
  int32 customer_id = 1;
  int32 amount = 2;
  int32 logical_clock = 4;
  int32 customer_request_id = 5;
  string interface = 6;
  string caller = 7;
  int32 id = 8;
  int32 branch_id = 9;
}

message Response {
  string message = 1;
  int32 logical_clock = 4;
}

message PropagateWithdrawRequest {
  int32 branch_id = 1;
  int32 amount = 2;
  int32 logical_clock = 4;
  int32 customer_request_id = 5;
  int32 customer_id = 6;
}

message PropagateDepositRequest {
  int32 branch_id = 1;
  int32 amount = 2;
  int32 logical_clock = 4;
  int32 customer_request_id = 5;
  int32 customer_id = 6;
}

message Request {
  string event_type = 1;
}


message Event {
  int32 customer_request_id = 1;
  int32 logical_clock = 2;
  string interface = 3;
  string comment = 4;
}

message BranchResp {
  int32 id = 1;
  string type = 2;
  repeated Event events = 3;
}

message BranchData {
  repeated BranchResp branches = 1;
}